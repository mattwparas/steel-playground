(this.webpackJsonp=this.webpackJsonp||[]).push([[73],{58:function(e,n,t){"use strict";t.r(n),n.default="(define (make-node datum children)\n  (cons datum children))\n\n(define (datum node)\n  (car node))\n\n(define (children node)\n  (cdr node))\n\n(define (leaf datum)\n  (make-node datum '()))\n\n(define (cities name-list)\n  (map leaf name-list))\n\n\n(define world-tree\n  (make-node\n   'world\n   (list (make-node\n          'italy\n          (cities '(venezia riomaggiore firenze roma)))\n         (make-node\n          '(united states)\n          (list (make-node\n                 'california\n                 (cities '(berkeley (san francisco) gilroy)))\n                (make-node\n                 'massachusetts\n                 (cities '(cambridge amherst sudbury)))\n                (make-node 'ohio (cities '(kent)))))\n         (make-node 'zimbabwe (cities '(harare hwange)))\n         (make-node 'china\n                    (cities '(beijing shanghai guangzhou suzhou)))\n         (make-node\n          '(great britain)\n          (list\n           (make-node 'england (cities '(liverpool)))\n           (make-node 'scotland\n                      (cities '(edinburgh glasgow (gretna green))))\n           (make-node 'wales (cities '(abergavenny)))))\n         (make-node\n          'australia\n          (list\n           (make-node 'victoria (cities '(melbourne)))\n           (make-node '(new south wales) (cities '(sydney)))\n           (make-node 'queensland\n                      (cities '(cairns (port douglas))))))\n         (make-node 'honduras (cities '(tegucigalpa))))))\n\n\n(define (leaf? node)\n  (null? (children node)))\n\n\n(define (count-leaves tree)\n  (if (leaf? tree)\n      1\n      (count-leaves-in-forest (children tree))))\n\n(define (count-leaves-in-forest forest)\n  (if (null? forest)\n      0\n      (+ (count-leaves (car forest))\n         (count-leaves-in-forest (cdr forest)))))\n\n\n(define (in-tree? place tree)\n  (or (equal? place (datum tree))\n      (in-forest? place (children tree))))\n\n(define (in-forest? place forest)\n  (if (null? forest)\n      #f\n      (or (in-tree? place (car forest))\n          (in-forest? place (cdr forest)))))\n\n\n(define (locate city tree)\n  (if (equal? city (datum tree))\n      (list city)\n      (let ((subpath (locate-in-forest city (children tree))))\n        (if subpath\n            (cons (datum tree) subpath)\n            #f))))\n\n(define (locate-in-forest city forest)\n  (if (null? forest)\n      #f\n      (or (locate city (car forest))\n          (locate-in-forest city (cdr forest)))))\n\n\n(locate 'glasgow world-tree)\n(locate 'melbourne world-tree)\n(count-leaves world-tree)"}}]);